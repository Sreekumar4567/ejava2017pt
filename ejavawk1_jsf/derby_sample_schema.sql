-- ============================

-- This file was created using Derby's dblook utility.
-- Timestamp: 2016-03-01 20:57:18.109
-- Source database is: sample
-- Connection URL is: jdbc:derby://localhost:1527/sample;user=app;password=app
-- Specified schema is: app
-- appendLogs: false

-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------

drop schema if exists derby_sample;

create schema derby_sample;

use derby_sample;

CREATE TABLE DISCOUNT_CODE (DISCOUNT_CODE CHAR(1) NOT NULL, RATE DECIMAL(4,2));

CREATE TABLE PRODUCT (PRODUCT_ID INTEGER NOT NULL, MANUFACTURER_ID INTEGER NOT NULL, PRODUCT_CODE CHAR(2) NOT NULL, PURCHASE_COST DECIMAL(12,2), QUANTITY_ON_HAND INTEGER, MARKUP DECIMAL(4,2), AVAILABLE VARCHAR(5), DESCRIPTION VARCHAR(50));

CREATE TABLE CUSTOMER (CUSTOMER_ID INTEGER NOT NULL, DISCOUNT_CODE CHAR(1) NOT NULL, ZIP VARCHAR(10) NOT NULL, NAME VARCHAR(30), ADDRESSLINE1 VARCHAR(30), ADDRESSLINE2 VARCHAR(30), CITY VARCHAR(25), STATE CHAR(2), PHONE CHAR(12), FAX CHAR(12), EMAIL VARCHAR(40), CREDIT_LIMIT INTEGER);

CREATE TABLE PRODUCT_CODE (PROD_CODE CHAR(2) NOT NULL, DISCOUNT_CODE CHAR(1) NOT NULL, DESCRIPTION VARCHAR(10));

CREATE TABLE MANUFACTURER (MANUFACTURER_ID INTEGER NOT NULL, NAME VARCHAR(30), ADDRESSLINE1 VARCHAR(30), ADDRESSLINE2 VARCHAR(30), CITY VARCHAR(25), STATE CHAR(2), ZIP CHAR(10), PHONE VARCHAR(12), FAX VARCHAR(12), EMAIL VARCHAR(40), REP VARCHAR(30));

CREATE TABLE PURCHASE_ORDER (ORDER_NUM INTEGER NOT NULL, CUSTOMER_ID INTEGER NOT NULL, PRODUCT_ID INTEGER NOT NULL, QUANTITY SMALLINT, SHIPPING_COST DECIMAL(12,2), SALES_DATE DATE, SHIPPING_DATE DATE, FREIGHT_COMPANY VARCHAR(30));

CREATE TABLE MICRO_MARKET (ZIP_CODE VARCHAR(10) NOT NULL, RADIUS DOUBLE, AREA_LENGTH DOUBLE, AREA_WIDTH DOUBLE);

-- ----------------------------------------------
-- DDL Statements for keys
-- ----------------------------------------------

-- PRIMARY/UNIQUE
ALTER TABLE MICRO_MARKET ADD CONSTRAINT SQL110524110829280 PRIMARY KEY (ZIP_CODE);

ALTER TABLE MANUFACTURER ADD CONSTRAINT SQL110524110828930 PRIMARY KEY (MANUFACTURER_ID);

ALTER TABLE CUSTOMER ADD CONSTRAINT SQL110524110828130 PRIMARY KEY (CUSTOMER_ID);

ALTER TABLE PRODUCT_CODE ADD CONSTRAINT SQL110524110829750 PRIMARY KEY (PROD_CODE);

ALTER TABLE DISCOUNT_CODE ADD CONSTRAINT SQL110524110828740 PRIMARY KEY (DISCOUNT_CODE);

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT SQL110524110829500 PRIMARY KEY (ORDER_NUM);

ALTER TABLE PRODUCT ADD CONSTRAINT SQL110524110829970 PRIMARY KEY (PRODUCT_ID);

-- FOREIGN
ALTER TABLE CUSTOMER ADD CONSTRAINT FOREIGNKEY_ZIP FOREIGN KEY (ZIP) REFERENCES MICRO_MARKET (ZIP_CODE) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE CUSTOMER ADD CONSTRAINT FOREIGNKEY_DISCOUNT_CODE FOREIGN KEY (DISCOUNT_CODE) REFERENCES DISCOUNT_CODE (DISCOUNT_CODE) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT FOREIGNKEY_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PURCHASE_ORDER ADD CONSTRAINT FOREIGNKEY_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PRODUCT ADD CONSTRAINT FOREIGNKEY_PRODUCT_CODE FOREIGN KEY (PRODUCT_CODE) REFERENCES PRODUCT_CODE (PROD_CODE) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE PRODUCT ADD CONSTRAINT FOREIGNKEY_MANUFACTURER_ID FOREIGN KEY (MANUFACTURER_ID) REFERENCES MANUFACTURER (MANUFACTURER_ID) ON DELETE NO ACTION ON UPDATE NO ACTION;

